{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachg\\\\Code\\\\cora-portfolio-site\\\\src\\\\Components\\\\project\\\\Project.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Image from '../image/Image';\nimport style from './Project.module.css';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { motion } from 'framer-motion';\nimport { BrowserRouter, Routes, Route, NavLink, Outlet, useParams, useLocation, usePrompt, useHistory } from 'react-router-dom';\nimport { useRouteMatch } from 'react-router';\nimport ProjectGalleryThumbnail from '../projectGalleryThumbnail/ProjectGalleryThumbnail';\nimport ProjectGallery from '../projectGallery/ProjectGallery';\n\nconst Project = props => {\n  const [projectDescription, setProjectDescription] = useState('');\n  const [projectTitle, setProjectTitle] = useState('');\n  const [projectSlug, setProjectSlug] = useState('');\n  const [loaded, setLoaded] = useState(false);\n  const [projectGalleries, setProjectGalleries] = useState([]);\n  const params = useParams();\n\n  if (params.subProject) {\n    console.log('yes');\n  }\n\n  const endpoint = !params.subproject ? 'projects' : 'sub_projects';\n  const slug = !params.subProject ? params.slug : params.subProject;\n  const galleryEndpoint = !params.subProject ? '' : 'sub_';\n  const projectsRequest = axios.get(`http://localhost:8000/wp-json/custom-api/v1/${endpoint}?slug=${params.slug}`);\n  const projectGalleriesRequest = axios.get(`http://localhost:8000/wp-json/custom-api/v1/${galleryEndpoint}project_galleries?slug=${slug}`);\n  useEffect(() => {\n    axios.all([projectsRequest, projectGalleriesRequest]).then(axios.spread((...responses) => {\n      const projectsResponse = responses[0].data[0];\n      const projectGalleriesResponse = responses[1].data;\n      console.log(responses[1].data);\n      setProjectTitle(projectsResponse.title);\n      setProjectDescription(projectsResponse.description);\n      setProjectGalleries(projectGalleriesResponse);\n    })).then(() => setLoaded(true));\n  }, [params]);\n\n  if (!loaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }\n    }, \"loading\", /*#__PURE__*/React.createElement(Outlet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  if (loaded) {\n    // return <ProjectGalleryContainer galleries={galleries} />;\n    console.log(projectGalleries);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, projectTitle), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, projectDescription), projectGalleries.map(gallery => // <NavLink to={`/gallery/${gallery.gallery_slug}`}>\n    // \t<ProjectGalleryThumbnail gallery={gallery} />\n    // </NavLink>\n    console.log(gallery)));\n  } // <div className={style.projectContainer}>\n  // \t<div>{projectTitle}</div>\n  // \t<div dangerouslySetInnerHTML={{ __html: projectDescription }} />\n  // \t{images.map((image) => (\n  // \t\t<Image key={image.id} image={image} />\n  // \t))}\n  // </div>\n\n};\n\nexport default Project;","map":{"version":3,"sources":["C:/Users/zachg/Code/cora-portfolio-site/src/Components/project/Project.jsx"],"names":["React","Component","useState","useEffect","axios","Image","style","CSSTransitionGroup","motion","BrowserRouter","Routes","Route","NavLink","Outlet","useParams","useLocation","usePrompt","useHistory","useRouteMatch","ProjectGalleryThumbnail","ProjectGallery","Project","props","projectDescription","setProjectDescription","projectTitle","setProjectTitle","projectSlug","setProjectSlug","loaded","setLoaded","projectGalleries","setProjectGalleries","params","subProject","console","log","endpoint","subproject","slug","galleryEndpoint","projectsRequest","get","projectGalleriesRequest","all","then","spread","responses","projectsResponse","data","projectGalleriesResponse","title","description","map","gallery"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Image from '../image/Image';\r\n\r\nimport style from './Project.module.css';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n\tBrowserRouter,\r\n\tRoutes,\r\n\tRoute,\r\n\tNavLink,\r\n\tOutlet,\r\n\tuseParams,\r\n\tuseLocation,\r\n\tusePrompt,\r\n\tuseHistory,\r\n} from 'react-router-dom';\r\nimport { useRouteMatch } from 'react-router';\r\nimport ProjectGalleryThumbnail from '../projectGalleryThumbnail/ProjectGalleryThumbnail';\r\nimport ProjectGallery from '../projectGallery/ProjectGallery';\r\n\r\nconst Project = (props) => {\r\n\tconst [projectDescription, setProjectDescription] = useState('');\r\n\tconst [projectTitle, setProjectTitle] = useState('');\r\n\tconst [projectSlug, setProjectSlug] = useState('');\r\n\tconst [loaded, setLoaded] = useState(false);\r\n\tconst [projectGalleries, setProjectGalleries] = useState([]);\r\n\r\n\tconst params = useParams();\r\n\r\n\tif (params.subProject) {\r\n\t\tconsole.log('yes');\r\n\t}\r\n\tconst endpoint = !params.subproject ? 'projects' : 'sub_projects';\r\n\tconst slug = !params.subProject ? params.slug : params.subProject;\r\n\tconst galleryEndpoint = !params.subProject ? '' : 'sub_';\r\n\r\n\tconst projectsRequest = axios.get(\r\n\t\t`http://localhost:8000/wp-json/custom-api/v1/${endpoint}?slug=${params.slug}`\r\n\t);\r\n\tconst projectGalleriesRequest = axios.get(\r\n\t\t`http://localhost:8000/wp-json/custom-api/v1/${galleryEndpoint}project_galleries?slug=${slug}`\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.all([projectsRequest, projectGalleriesRequest])\r\n\t\t\t.then(\r\n\t\t\t\taxios.spread((...responses) => {\r\n\t\t\t\t\tconst projectsResponse = responses[0].data[0];\r\n\t\t\t\t\tconst projectGalleriesResponse = responses[1].data;\r\n\t\t\t\t\tconsole.log(responses[1].data);\r\n\r\n\t\t\t\t\tsetProjectTitle(projectsResponse.title);\r\n\t\t\t\t\tsetProjectDescription(projectsResponse.description);\r\n\r\n\t\t\t\t\tsetProjectGalleries(projectGalleriesResponse);\r\n\t\t\t\t})\r\n\t\t\t)\r\n\r\n\t\t\t.then(() => setLoaded(true));\r\n\t}, [params]);\r\n\r\n\tif (!loaded) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tloading\r\n\t\t\t\t<Outlet />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (loaded) {\r\n\t\t// return <ProjectGalleryContainer galleries={galleries} />;\r\n\t\tconsole.log(projectGalleries);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>{projectTitle}</h1>\r\n\t\t\t\t<h2>{projectDescription}</h2>\r\n\t\t\t\t{projectGalleries.map((gallery) =>\r\n\t\t\t\t\t// <NavLink to={`/gallery/${gallery.gallery_slug}`}>\r\n\t\t\t\t\t// \t<ProjectGalleryThumbnail gallery={gallery} />\r\n\t\t\t\t\t// </NavLink>\r\n\t\t\t\t\tconsole.log(gallery)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// <div className={style.projectContainer}>\r\n\t// \t<div>{projectTitle}</div>\r\n\t// \t<div dangerouslySetInnerHTML={{ __html: projectDescription }} />\r\n\t// \t{images.map((image) => (\r\n\t// \t\t<Image key={image.id} image={image} />\r\n\t// \t))}\r\n\t// </div>\r\n};\r\n\r\nexport default Project;\r\n"]},"metadata":{},"sourceType":"module"}