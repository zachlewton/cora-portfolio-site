{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachg\\\\Code\\\\cora-portfolio-site\\\\src\\\\Components\\\\mainHeader\\\\MainHeader.jsx\";\nimport React from 'react';\nimport style from './MainHeader.module.css';\nimport MainHeaderWord from '../mainHeaderWord/MainHeaderWord';\nconst words = props.content.split(' ');\nconst parsedWords = words.map(word => {\n  if (word.length <= 2) {\n    return word;\n  } else {\n    return `<span className={style.capital}>${word[0]}</span>${word.substring(1)}`;\n  }\n});\nconst newHeader = parsedWords.join(' ');\n\nconst MainHeader = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: style.header,\n    dangerouslySetInnerHtml: {\n      __html: newHeader\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default MainHeader;","map":{"version":3,"sources":["C:/Users/zachg/Code/cora-portfolio-site/src/Components/mainHeader/MainHeader.jsx"],"names":["React","style","MainHeaderWord","words","props","content","split","parsedWords","map","word","length","substring","newHeader","join","MainHeader","header","__html"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,MAAMC,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoB,GAApB,CAAd;AACA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AACvC,MAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AACrB,WAAOD,IAAP;AACA,GAFD,MAEO;AACN,WAAQ,mCAAkCA,IAAI,CAAC,CAAD,CAAI,UAASA,IAAI,CAACE,SAAL,CAC1D,CAD0D,CAEzD,EAFF;AAGA;AACD,CARmB,CAApB;AASA,MAAMC,SAAS,GAAGL,WAAW,CAACM,IAAZ,CAAiB,GAAjB,CAAlB;;AACA,MAAMC,UAAU,GAAIV,KAAD,IAAW;AAC7B,sBACC;AACC,IAAA,SAAS,EAAEH,KAAK,CAACc,MADlB;AAEC,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEJ;AAAV,KAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAMA,CAPD;;AASA,eAAeE,UAAf","sourcesContent":["import React from 'react';\r\nimport style from './MainHeader.module.css';\r\nimport MainHeaderWord from '../mainHeaderWord/MainHeaderWord';\r\nconst words = props.content.split(' ');\r\nconst parsedWords = words.map((word) => {\r\n\tif (word.length <= 2) {\r\n\t\treturn word;\r\n\t} else {\r\n\t\treturn `<span className={style.capital}>${word[0]}</span>${word.substring(\r\n\t\t\t1\r\n\t\t)}`;\r\n\t}\r\n});\r\nconst newHeader = parsedWords.join(' ');\r\nconst MainHeader = (props) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={style.header}\r\n\t\t\tdangerouslySetInnerHtml={{ __html: newHeader }}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default MainHeader;\r\n"]},"metadata":{},"sourceType":"module"}