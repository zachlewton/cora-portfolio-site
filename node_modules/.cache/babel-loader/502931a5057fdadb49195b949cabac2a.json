{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachg\\\\Code\\\\cora-portfolio-site\\\\src\\\\Components\\\\project\\\\Project.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Image from \"../image/Image\";\nimport style from \"./Project.module.css\";\nimport { Query } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nconst Project = props => {\n  const GET_PROJECT = gql`\n    {\n      projects {\n        edges {\n          node {\n            slug\n            title\n            content\n            projectMeta {\n              year\n              images {\n                sourceUrl\n                caption\n                description\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n\n  /*#__PURE__*/\n  React.createElement(Query, {\n    query: GET_PROJECT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return \"Loading...\";\n    if (error) return `Error! ${error.message}`;\n    return /*#__PURE__*/React.createElement(\"select\", {\n      name: \"dog\",\n      onChange: onDogSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, data.dogs.map(dog => /*#__PURE__*/React.createElement(\"option\", {\n      key: dog.id,\n      value: dog.breed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, dog.breed)));\n  });\n}; // const Project = (props) => {\n//   const [projectDescription, setProjectDescription] = useState(\"\");\n//   const [projectTitle, setProjectTitle] = useState(\"\");\n//   const [images, setImages] = useState([]);\n//   const slug = props.match.params.slug;\n//   useEffect(() => {\n//     axios\n//       .get(`/wp-json/wp/v2/project?slug=${slug}`)\n//       .then(\n//         (res) => (\n//           console.log(res.data[0]),\n//           setProjectDescription(res.data[0].content.rendered),\n//           setProjectTitle(res.data[0].title.rendered),\n//           setImages(res.data[0].acf.images)\n//         )\n//       );\n//   }, [slug]);\n//   return (\n//     <div className={style.projectContainer}>\n//       <div>{projectTitle}</div>\n//       <div dangerouslySetInnerHTML={{ __html: projectDescription }} />\n//       {images.map((image) => (\n//         <Image key={image.id} image={image} />\n//       ))}\n//     </div>\n//   );\n// };\n\n\nexport default Project;","map":{"version":3,"sources":["C:/Users/zachg/Code/cora-portfolio-site/src/Components/project/Project.jsx"],"names":["React","Component","useState","useEffect","axios","Image","style","Query","gql","Project","props","GET_PROJECT","loading","error","data","message","onDogSelected","dogs","map","dog","id","breed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,WAAW,GAAGH,GAAI;;;;;;;;;;;;;;;;;;;;GAAxB;;AAsBA;AAAA,sBAAC,KAAD;AAAO,IAAA,KAAK,EAAEG,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AAC7B,QAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,QAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,wBACE;AAAQ,MAAA,IAAI,EAAC,KAAb;AAAmB,MAAA,QAAQ,EAAEC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAeC,GAAD,iBACb;AAAQ,MAAA,GAAG,EAAEA,GAAG,CAACC,EAAjB;AAAqB,MAAA,KAAK,EAAED,GAAG,CAACE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,GAAG,CAACE,KADP,CADD,CADH,CADF;AASD,GAdH;AAgBD,CAvCD,C,CAyCA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeZ,OAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Image from \"../image/Image\";\r\nimport style from \"./Project.module.css\";\r\n\r\nimport { Query } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst Project = (props) => {\r\n  const GET_PROJECT = gql`\r\n    {\r\n      projects {\r\n        edges {\r\n          node {\r\n            slug\r\n            title\r\n            content\r\n            projectMeta {\r\n              year\r\n              images {\r\n                sourceUrl\r\n                caption\r\n                description\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  <Query query={GET_PROJECT}>\r\n    {({ loading, error, data }) => {\r\n      if (loading) return \"Loading...\";\r\n      if (error) return `Error! ${error.message}`;\r\n\r\n      return (\r\n        <select name=\"dog\" onChange={onDogSelected}>\r\n          {data.dogs.map((dog) => (\r\n            <option key={dog.id} value={dog.breed}>\r\n              {dog.breed}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n    }}\r\n  </Query>;\r\n};\r\n\r\n// const Project = (props) => {\r\n//   const [projectDescription, setProjectDescription] = useState(\"\");\r\n//   const [projectTitle, setProjectTitle] = useState(\"\");\r\n//   const [images, setImages] = useState([]);\r\n\r\n//   const slug = props.match.params.slug;\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(`/wp-json/wp/v2/project?slug=${slug}`)\r\n//       .then(\r\n//         (res) => (\r\n//           console.log(res.data[0]),\r\n//           setProjectDescription(res.data[0].content.rendered),\r\n//           setProjectTitle(res.data[0].title.rendered),\r\n//           setImages(res.data[0].acf.images)\r\n//         )\r\n//       );\r\n//   }, [slug]);\r\n\r\n//   return (\r\n//     <div className={style.projectContainer}>\r\n//       <div>{projectTitle}</div>\r\n//       <div dangerouslySetInnerHTML={{ __html: projectDescription }} />\r\n//       {images.map((image) => (\r\n//         <Image key={image.id} image={image} />\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default Project;\r\n"]},"metadata":{},"sourceType":"module"}