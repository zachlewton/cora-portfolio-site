{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachg\\\\Code\\\\cora-portfolio-site\\\\src\\\\Components\\\\medium\\\\Medium.jsx\";\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Image from '../image/Image';\nimport { useQuery, gql } from '@apollo/client';\n\nconst Medium = props => {\n  const [loaded, setLoaded] = useState(false);\n  const [images, setImages] = useState([]);\n  const [medium, setMedium] = useState({});\n  const slug = String(props.match.params.slug);\n  const GET_WORKS = gql`\n\t\tquery GET_WORKS($slug: String) {\n\t\t\twork(id: $slug, idType: SLUG) {\n\t\t\t\tid\n\t\t\t\tcontent(format: RENDERED)\n\t\t\t\tslug\n\t\t\t\ttitle(format: RENDERED)\n\t\t\t\tprojectMeta {\n\t\t\t\t\timages {\n\t\t\t\t\t\tcaption(format: RENDERED)\n\t\t\t\t\t\tdescription(format: RENDERED)\n\t\t\t\t\t\tsourceUrl(size: LARGE)\n\t\t\t\t\t\ttitle(format: RENDERED)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_WORKS, {\n    variables: {\n      slug: slug\n    }\n  }); // useEffect(() => {\n  //   axios\n  //     .get(`/wp-json/wp/v2/work?slug=${slug}`)\n  //     .then((res) => setImages(res.data[0].acf.images))\n  //     .then(setLoaded(true));\n  //   axios\n  //     .get(`/wp-json/wp/v2/work?slug=${slug}`)\n  //     .then((res) => setMedium(res.data[0]))\n  //     .catch((err) => console.log(err));\n  // }, [slug]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }\n    }, \"loading\");\n  }\n\n  console.log(medium);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, data.project.projectMeta.images.map(image => /*#__PURE__*/React.createElement(Image, {\n    key: image.id,\n    image: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Medium;","map":{"version":3,"sources":["C:/Users/zachg/Code/cora-portfolio-site/src/Components/medium/Medium.jsx"],"names":["React","Component","useState","useEffect","axios","Image","useQuery","gql","Medium","props","loaded","setLoaded","images","setImages","medium","setMedium","slug","String","match","params","GET_WORKS","loading","error","data","variables","console","log","project","projectMeta","map","image","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMc,IAAI,GAAGC,MAAM,CAACR,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBH,IAApB,CAAnB;AACA,QAAMI,SAAS,GAAGb,GAAI;;;;;;;;;;;;;;;;;EAAtB;AAmBA,QAAM;AAAEc,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BjB,QAAQ,CAACc,SAAD,EAAY;AACpDI,IAAAA,SAAS,EAAE;AAAER,MAAAA,IAAI,EAAEA;AAAR;AADyC,GAAZ,CAAzC,CAzByB,CA6BzB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AACA,MAAIK,OAAJ,EAAa;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACA;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACES,IAAI,CAACI,OAAL,CAAaC,WAAb,CAAyBhB,MAAzB,CAAgCiB,GAAhC,CAAqCC,KAAD,iBACpC,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,IAAA,KAAK,EAAED,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CADD;AAOA,CArDD;;AAuDA,eAAetB,MAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Image from '../image/Image';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\nconst Medium = (props) => {\r\n\tconst [loaded, setLoaded] = useState(false);\r\n\tconst [images, setImages] = useState([]);\r\n\tconst [medium, setMedium] = useState({});\r\n\r\n\tconst slug = String(props.match.params.slug);\r\n\tconst GET_WORKS = gql`\r\n\t\tquery GET_WORKS($slug: String) {\r\n\t\t\twork(id: $slug, idType: SLUG) {\r\n\t\t\t\tid\r\n\t\t\t\tcontent(format: RENDERED)\r\n\t\t\t\tslug\r\n\t\t\t\ttitle(format: RENDERED)\r\n\t\t\t\tprojectMeta {\r\n\t\t\t\t\timages {\r\n\t\t\t\t\t\tcaption(format: RENDERED)\r\n\t\t\t\t\t\tdescription(format: RENDERED)\r\n\t\t\t\t\t\tsourceUrl(size: LARGE)\r\n\t\t\t\t\t\ttitle(format: RENDERED)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t`;\r\n\r\n\tconst { loading, error, data } = useQuery(GET_WORKS, {\r\n\t\tvariables: { slug: slug },\r\n\t});\r\n\r\n\t// useEffect(() => {\r\n\t//   axios\r\n\t//     .get(`/wp-json/wp/v2/work?slug=${slug}`)\r\n\t//     .then((res) => setImages(res.data[0].acf.images))\r\n\t//     .then(setLoaded(true));\r\n\r\n\t//   axios\r\n\t//     .get(`/wp-json/wp/v2/work?slug=${slug}`)\r\n\t//     .then((res) => setMedium(res.data[0]))\r\n\r\n\t//     .catch((err) => console.log(err));\r\n\t// }, [slug]);\r\n\tif (loading) {\r\n\t\treturn <div>loading</div>;\r\n\t}\r\n\r\n\tconsole.log(medium);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{data.project.projectMeta.images.map((image) => (\r\n\t\t\t\t<Image key={image.id} image={image} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Medium;\r\n"]},"metadata":{},"sourceType":"module"}