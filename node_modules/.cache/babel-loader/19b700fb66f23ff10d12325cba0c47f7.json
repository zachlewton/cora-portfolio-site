{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachg\\\\Code\\\\cora-portfolio-site\\\\src\\\\Components\\\\displayTypes\\\\columns\\\\Columns.jsx\";\nimport React, { Component, useState } from 'react';\nimport { HelpBlock } from 'react-bootstrap';\nimport ProjectImage from '../../projectImage/ProjectImage';\nimport style from './Columns.module.css';\n\nconst Columns = props => {\n  const column = props.display_type == '2 column' ? 2 : 3;\n  const [galleryView, toggleGalleryView] = useState(false);\n  const [imageRef, setImageRef] = useState(null);\n  let imageArray = []; // props.gallery.map((node) => {\n  // \tnode.type == 'image block'\n  // \t\t? node.block.map((block) => imageArray.push(block))\n  // \t\t: imageArray.push(node);\n  // });\n  // for (var i = 0; i < props.gallery.length; i++) {\n  // \tgallery[i].type == 'image block'\n  // \t\t? node.block.map((block, i) => (\n  //             imageArray.push(obj);\n  //             ))\n  // \t\t: imageArray.push(node);\n  // }\n\n  console.log(imageArray);\n\n  const raiseClick = id => {\n    setImageRef(id);\n    toggleGalleryView(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, imageArray.map(block => /*#__PURE__*/React.createElement(\"div\", {\n    className: style.cardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, block.type == 'video' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: style.videoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"video\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: style.imageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }))));\n};\n\nexport default Columns;","map":{"version":3,"sources":["C:/Users/zachg/Code/cora-portfolio-site/src/Components/displayTypes/columns/Columns.jsx"],"names":["React","Component","useState","HelpBlock","ProjectImage","style","Columns","props","column","display_type","galleryView","toggleGalleryView","imageRef","setImageRef","imageArray","console","log","raiseClick","id","container","map","block","cardContainer","type","videoContainer","imageContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAEA,OAAOC,KAAP,MAAkB,sBAAlB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAC1B,QAAMC,MAAM,GAAGD,KAAK,CAACE,YAAN,IAAsB,UAAtB,GAAmC,CAAnC,GAAuC,CAAtD;AAEA,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCT,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AAEA,MAAIY,UAAU,GAAG,EAAjB,CAN0B,CAQ1B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AAEA,QAAMG,UAAU,GAAIC,EAAD,IAAQ;AAC1BL,IAAAA,WAAW,CAACK,EAAD,CAAX;AACAP,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,GAHD;;AAKA,sBACC;AAAK,IAAA,SAAS,EAAEN,KAAK,CAACc,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,UAAU,CAACM,GAAX,CAAgBC,KAAD,iBACf;AAAK,IAAA,SAAS,EAAEhB,KAAK,CAACiB,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,KAAK,CAACE,IAAN,IAAc,OAAd,gBACA;AAAK,IAAA,SAAS,EAAElB,KAAK,CAACmB,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,gBAGA;AAAK,IAAA,SAAS,EAAEnB,KAAK,CAACoB,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADA,CADF,CADD;AAmBA,CAlDD;;AAoDA,eAAenB,OAAf","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { HelpBlock } from 'react-bootstrap';\r\nimport ProjectImage from '../../projectImage/ProjectImage';\r\n\r\nimport style from './Columns.module.css';\r\n\r\nconst Columns = (props) => {\r\n\tconst column = props.display_type == '2 column' ? 2 : 3;\r\n\r\n\tconst [galleryView, toggleGalleryView] = useState(false);\r\n\tconst [imageRef, setImageRef] = useState(null);\r\n\r\n\tlet imageArray = [];\r\n\r\n\t// props.gallery.map((node) => {\r\n\t// \tnode.type == 'image block'\r\n\t// \t\t? node.block.map((block) => imageArray.push(block))\r\n\t// \t\t: imageArray.push(node);\r\n\t// });\r\n\r\n\t// for (var i = 0; i < props.gallery.length; i++) {\r\n\t// \tgallery[i].type == 'image block'\r\n\t// \t\t? node.block.map((block, i) => (\r\n\r\n\t//             imageArray.push(obj);\r\n\r\n\t//             ))\r\n\t// \t\t: imageArray.push(node);\r\n\t// }\r\n\r\n\tconsole.log(imageArray);\r\n\r\n\tconst raiseClick = (id) => {\r\n\t\tsetImageRef(id);\r\n\t\ttoggleGalleryView(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={style.container}>\r\n\t\t\t{imageArray.map((block) => (\r\n\t\t\t\t<div className={style.cardContainer}>\r\n\t\t\t\t\t{block.type == 'video' ? (\r\n\t\t\t\t\t\t<div className={style.videoContainer}>video</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={style.imageContainer}>\r\n\t\t\t\t\t\t\t{/* <ProjectImage\r\n\t\t\t\t\t\t\t\t// onClick={() => raiseClick()}\r\n\t\t\t\t\t\t\t\timage={block}\r\n\t\t\t\t\t\t\t\tkey={}\r\n\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Columns;\r\n"]},"metadata":{},"sourceType":"module"}