{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachg\\\\Code\\\\cora-portfolio-site\\\\src\\\\Components\\\\gallery\\\\Gallery.jsx\";\nimport React, { Component } from 'react';\n\nconst Gallery = props => {\n  const images = props.images;\n  const imageRef = props.imageRef;\n  let image = images.find(image => {\n    if (image.id == imageRef) return true;\n  });\n  console.log(image);\n  let index = images.findIndex(image => image === imageRef);\n  console.log;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: image.sizes.medium,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }, \"exit\"));\n};\n\nexport default Gallery;","map":{"version":3,"sources":["C:/Users/zachg/Code/cora-portfolio-site/src/Components/gallery/Gallery.jsx"],"names":["React","Component","Gallery","props","images","imageRef","image","find","id","console","log","index","findIndex","sizes","medium","onClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAC1B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMC,QAAQ,GAAGF,KAAK,CAACE,QAAvB;AAEA,MAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAaD,KAAD,IAAW;AAClC,QAAIA,KAAK,CAACE,EAAN,IAAYH,QAAhB,EAA0B,OAAO,IAAP;AAC1B,GAFW,CAAZ;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,MAAIK,KAAK,GAAGP,MAAM,CAACQ,SAAP,CAAkBN,KAAD,IAAWA,KAAK,KAAKD,QAAtC,CAAZ;AAEAI,EAAAA,OAAO,CAACC,GAAR;AAEA,sBACC,uDACC;AAAK,IAAA,GAAG,EAAEJ,KAAK,CAACO,KAAN,CAAYC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAK,IAAA,OAAO,EAAEX,KAAK,CAACY,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,CADD;AAMA,CAnBD;;AAqBA,eAAeb,OAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst Gallery = (props) => {\r\n\tconst images = props.images;\r\n\tconst imageRef = props.imageRef;\r\n\r\n\tlet image = images.find((image) => {\r\n\t\tif (image.id == imageRef) return true;\r\n\t});\r\n\tconsole.log(image);\r\n\r\n\tlet index = images.findIndex((image) => image === imageRef);\r\n\r\n\tconsole.log;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img src={image.sizes.medium} />\r\n\t\t\t<div onClick={props.onClick}>exit</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Gallery;\r\n"]},"metadata":{},"sourceType":"module"}