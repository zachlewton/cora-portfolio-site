{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachg\\\\Code\\\\cora-portfolio-site\\\\src\\\\Components\\\\projectGallery\\\\GalleryContainer.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport ProjectImage from '../projectImage/ProjectImage';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Gallery from '../gallery/Gallery';\nimport style from './GalleryContainer.module.css';\n\nconst ProjectGallery = props => {\n  const params = useParams().gallery;\n  const [galleryView, toggleGalleryView] = useState(false);\n  const [imageRef, setImageRef] = useState(null);\n  console.log(props);\n\n  const raiseClick = id => {\n    setImageRef(id);\n    toggleGalleryView(true);\n  };\n\n  if (!galleryView) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: style.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, galleryTitle), /*#__PURE__*/React.createElement(\"div\", {\n      className: style.imagesContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, images.map(image => /*#__PURE__*/React.createElement(ProjectImage, {\n      onClick: () => raiseClick(image.id),\n      image: image,\n      key: image.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }))));\n  }\n\n  if (galleryView) {\n    return /*#__PURE__*/React.createElement(Gallery, {\n      onClick: () => toggleGalleryView(false),\n      images: images,\n      imageRef: imageRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    });\n  }\n};\n\nexport default ProjectGallery;","map":{"version":3,"sources":["C:/Users/zachg/Code/cora-portfolio-site/src/Components/projectGallery/GalleryContainer.jsx"],"names":["React","useEffect","useState","ProjectImage","useParams","axios","Gallery","style","ProjectGallery","props","params","gallery","galleryView","toggleGalleryView","imageRef","setImageRef","console","log","raiseClick","id","container","galleryTitle","imagesContainer","images","map","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACjC,QAAMC,MAAM,GAAGN,SAAS,GAAGO,OAA3B;AAEA,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCX,QAAQ,CAAC,KAAD,CAAjD;AAEA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;;AAEA,QAAMS,UAAU,GAAIC,EAAD,IAAQ;AAC1BJ,IAAAA,WAAW,CAACI,EAAD,CAAX;AACAN,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,GAHD;;AAKA,MAAI,CAACD,WAAL,EAAkB;AACjB,wBACC;AAAK,MAAA,SAAS,EAAEL,KAAK,CAACa,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,YAAL,CADD,eAEC;AAAK,MAAA,SAAS,EAAEd,KAAK,CAACe,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEC,MAAM,CAACC,GAAP,CAAYC,KAAD,iBACX,oBAAC,YAAD;AACC,MAAA,OAAO,EAAE,MAAMP,UAAU,CAACO,KAAK,CAACN,EAAP,CAD1B;AAEC,MAAA,KAAK,EAAEM,KAFR;AAGC,MAAA,GAAG,EAAEA,KAAK,CAACN,EAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CAFD,CADD;AAcA;;AAED,MAAIP,WAAJ,EAAiB;AAChB,wBACC,oBAAC,OAAD;AACC,MAAA,OAAO,EAAE,MAAMC,iBAAiB,CAAC,KAAD,CADjC;AAEC,MAAA,MAAM,EAAEU,MAFT;AAGC,MAAA,QAAQ,EAAET,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAOA;AACD,CAxCD;;AA0CA,eAAeN,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ProjectImage from '../projectImage/ProjectImage';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Gallery from '../gallery/Gallery';\r\nimport style from './GalleryContainer.module.css';\r\n\r\nconst ProjectGallery = (props) => {\r\n\tconst params = useParams().gallery;\r\n\r\n\tconst [galleryView, toggleGalleryView] = useState(false);\r\n\r\n\tconst [imageRef, setImageRef] = useState(null);\r\n\r\n\tconsole.log(props);\r\n\r\n\tconst raiseClick = (id) => {\r\n\t\tsetImageRef(id);\r\n\t\ttoggleGalleryView(true);\r\n\t};\r\n\r\n\tif (!galleryView) {\r\n\t\treturn (\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<h1>{galleryTitle}</h1>\r\n\t\t\t\t<div className={style.imagesContainer}>\r\n\t\t\t\t\t{images.map((image) => (\r\n\t\t\t\t\t\t<ProjectImage\r\n\t\t\t\t\t\t\tonClick={() => raiseClick(image.id)}\r\n\t\t\t\t\t\t\timage={image}\r\n\t\t\t\t\t\t\tkey={image.id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (galleryView) {\r\n\t\treturn (\r\n\t\t\t<Gallery\r\n\t\t\t\tonClick={() => toggleGalleryView(false)}\r\n\t\t\t\timages={images}\r\n\t\t\t\timageRef={imageRef}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default ProjectGallery;\r\n"]},"metadata":{},"sourceType":"module"}