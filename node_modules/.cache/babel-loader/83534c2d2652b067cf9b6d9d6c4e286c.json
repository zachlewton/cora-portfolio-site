{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachg\\\\Code\\\\cora-portfolio-site\\\\src\\\\Components\\\\displayTypes\\\\columns\\\\Columns.jsx\";\nimport React, { Component, useState } from 'react';\nimport ProjectImage from '../../projectImage/ProjectImage';\nimport ScrollingGallery from '../scrollingGallery/ScrollingGallery';\nimport CaptionLines from '../../captionLines/CaptionLines';\nimport ReactPlayer from 'react-player';\nimport { useMediaQuery } from 'react-responsive';\nimport style from './Columns.module.css';\n\nconst Columns = props => {\n  const column = props.display_type == '2 column' ? 2 : 3;\n  const isTabletOrMobile = useMediaQuery({\n    query: '(max-width: 932px)'\n  });\n  const [galleryView, toggleGalleryView] = useState(false);\n  const [imageRef, setImageRef] = useState(null);\n  let imageArray = [];\n  props.gallery.map(node => {\n    node.type == 'image block' ? node.block.map(block => imageArray.push(block)) : imageArray.push(node);\n  }); // for (var i = 0; i < props.gallery.length; i++) {\n  // \tgallery[i].type == 'image block'\n  // \t\t? node.block.map((block, i) => (\n  //             imageArray.push(obj);\n  //             ))\n  // \t\t: imageArray.push(node);\n  // }\n\n  const raiseClick = obj => {\n    console.log('clicked');\n    setImageRef(obj);\n    toggleGalleryView(true);\n  };\n\n  return !galleryView ? /*#__PURE__*/React.createElement(\"div\", {\n    className: props.displayType == '3 column' ? style.threeGrid : style.twoGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, imageArray.map(block => /*#__PURE__*/React.createElement(React.Fragment, null, block.type == 'video' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: style.videoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: block.video_link,\n    width: \"100%\",\n    height: !isTabletOrMobile ? '11vw' : '19vw',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: style.imageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: block.src,\n    onClick: () => raiseClick(imageArray.indexOf(block)),\n    key: imageArray.indexOf(block),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(CaptionLines, {\n    content: block.caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }\n  }))))) : /*#__PURE__*/React.createElement(ScrollingGallery, {\n    raiseExit: () => toggleGalleryView(!galleryView),\n    gallery: imageArray,\n    imageRef: imageRef,\n    exitButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default Columns;","map":{"version":3,"sources":["C:/Users/zachg/Code/cora-portfolio-site/src/Components/displayTypes/columns/Columns.jsx"],"names":["React","Component","useState","ProjectImage","ScrollingGallery","CaptionLines","ReactPlayer","useMediaQuery","style","Columns","props","column","display_type","isTabletOrMobile","query","galleryView","toggleGalleryView","imageRef","setImageRef","imageArray","gallery","map","node","type","block","push","raiseClick","obj","console","log","displayType","threeGrid","twoGrid","videoContainer","video_link","imageContainer","src","indexOf","caption"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\n\r\nimport ProjectImage from '../../projectImage/ProjectImage';\r\nimport ScrollingGallery from '../scrollingGallery/ScrollingGallery';\r\nimport CaptionLines from '../../captionLines/CaptionLines';\r\nimport ReactPlayer from 'react-player';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport style from './Columns.module.css';\r\n\r\nconst Columns = (props) => {\r\n\tconst column = props.display_type == '2 column' ? 2 : 3;\r\n\r\n\tconst isTabletOrMobile = useMediaQuery({ query: '(max-width: 932px)' });\r\n\r\n\tconst [galleryView, toggleGalleryView] = useState(false);\r\n\tconst [imageRef, setImageRef] = useState(null);\r\n\r\n\tlet imageArray = [];\r\n\r\n\tprops.gallery.map((node) => {\r\n\t\tnode.type == 'image block'\r\n\t\t\t? node.block.map((block) => imageArray.push(block))\r\n\t\t\t: imageArray.push(node);\r\n\t});\r\n\r\n\t// for (var i = 0; i < props.gallery.length; i++) {\r\n\t// \tgallery[i].type == 'image block'\r\n\t// \t\t? node.block.map((block, i) => (\r\n\r\n\t//             imageArray.push(obj);\r\n\r\n\t//             ))\r\n\t// \t\t: imageArray.push(node);\r\n\t// }\r\n\r\n\tconst raiseClick = (obj) => {\r\n\t\tconsole.log('clicked');\r\n\t\tsetImageRef(obj);\r\n\t\ttoggleGalleryView(true);\r\n\t};\r\n\r\n\treturn !galleryView ? (\r\n\t\t<div\r\n\t\t\tclassName={\r\n\t\t\t\tprops.displayType == '3 column' ? style.threeGrid : style.twoGrid\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{imageArray.map((block) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{block.type == 'video' ? (\r\n\t\t\t\t\t\t<div className={style.videoContainer}>\r\n\t\t\t\t\t\t\t<ReactPlayer\r\n\t\t\t\t\t\t\t\turl={block.video_link}\r\n\t\t\t\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\t\t\t\theight={!isTabletOrMobile ? '11vw' : '19vw'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={style.imageContainer}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={block.src}\r\n\t\t\t\t\t\t\t\tonClick={() => raiseClick(imageArray.indexOf(block))}\r\n\t\t\t\t\t\t\t\tkey={imageArray.indexOf(block)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<CaptionLines content={block.caption} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t) : (\r\n\t\t<ScrollingGallery\r\n\t\t\traiseExit={() => toggleGalleryView(!galleryView)}\r\n\t\t\tgallery={imageArray}\r\n\t\t\timageRef={imageRef}\r\n\t\t\texitButton\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Columns;\r\n"]},"metadata":{},"sourceType":"module"}